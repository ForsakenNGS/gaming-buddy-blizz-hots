{% extends "core::frame.twig" %}
{% block content %}
  <div class="hots-draft-flex d-flex">
    <div class="hots-draft-team-blue align-self-stretch bg-info border-right border-info p-2"
         data-template="gaming-buddy-blizz-hots::elements/team.twig" data-team="blue">
      {% include "gaming-buddy-blizz-hots::elements/team.twig" with { teamColor: "blue" } %}
    </div>
    <div class="hots-draft-center align-self-stretch bg-dark text-light flex-grow-1 flex-column p-2">
      <div class="d-flex">
        <div class="hots-draft-bans-blue d-flex text-left" data-template="gaming-buddy-blizz-hots::elements/bans.twig"
             data-team="blue">
          {% include "gaming-buddy-blizz-hots::elements/bans.twig" with { teamColor: "blue" } %}
        </div>
        <div class="flex-grow-1">
          <div class="hots-draft-map text-center" data-template="gaming-buddy-blizz-hots::elements/map.twig">
            {% include "gaming-buddy-blizz-hots::elements/map.twig" %}
          </div>
          <!-- Timer / active team? --->
        </div>
        <div class="hots-draft-bans-blue d-flex text-right" data-template="gaming-buddy-blizz-hots::elements/bans.twig"
             data-team="red">
          {% include "gaming-buddy-blizz-hots::elements/bans.twig" with { teamColor: "red" } %}
        </div>
      </div>
      <div class="hots-draft-helper" data-template="gaming-buddy-blizz-hots::elements/draft-helper.twig">
        {% include "gaming-buddy-blizz-hots::elements/draft-helper.twig" %}
      </div>
    </div>
    <div class="hots-draft-team-red align-self-stretch bg-info border-right border-info p-2"
         data-template="gaming-buddy-blizz-hots::elements/team.twig" data-team="red">
      {% include "gaming-buddy-blizz-hots::elements/team.twig" with { teamColor: "red" } %}
    </div>
  </div>
  {% include "gaming-buddy-blizz-hots::elements/modal-ban-learn.twig" %}
  {% include "gaming-buddy-blizz-hots::elements/modal-hero-learn.twig" %}
  <link rel="stylesheet" href="{{ plugin.getFilePath("gui", "draft.css") }}">
  <script type="text/javascript">
      $(function () {
          let plugin = gui.getPlugin("{{ plugin.name }}").frontend;

          // Learn new bans (modal)
          let banLearn = (banElement) => {
              let imageData = $(banElement).attr("src");
              $("#hots-modal-ban-learn .btn-primary").off("click").on("click", function (e) {
                  // Save ban
                  e.preventDefault();
                  plugin.saveHeroBanImage($("#hots-modal-ban-learn-hero").val(), imageData);
                  $("#hots-modal-ban-learn").modal("hide");
              });
              $("#hots-modal-ban-learn").modal("show");
          };

          // Learn hero name substitutions
          let heroLearn = (heroElement) => {
              let heroNameFailed = $(heroElement).attr("data-name");
              $("#hots-modal-hero-learn .btn-primary").off("click").on("click", function (e) {
                  // Save ban
                  e.preventDefault();
                  let heroIdCorrect = $("#hots-modal-hero-learn-name").val();
                  plugin.gameData.addHeroCorrection(heroNameFailed, heroIdCorrect);
                  plugin.saveHeroCorrection(heroNameFailed, heroIdCorrect);
                  $("#hots-modal-hero-learn").modal("hide");
              });
              $("#hots-modal-hero-learn").modal("show");
          };

          // Player recent picks tooltip
          let playerInitTooltip = function(element) {
              jQuery(element).find("[data-tooltip=\"player-picks\"]").each(function() {
                  jQuery(this).popover({
                      trigger: 'hover',
                      content: jQuery(this).find("script[data-content=\"player-picks\"]").html(),
                      container: this
                  });
              });
          };

          // Executed every time some element is rendered
          let elementBinding = (element) => {
              $(element).find("[data-plugin-action=\"ban-learn\"]").on("click", function () {
                  banLearn(this);
              });
              $(element).find("[data-plugin-action=\"hero-learn\"]").on("click", function () {
                  heroLearn(this);
              })
              playerInitTooltip(element);
          };

          // Apply to elements rendered async
          plugin.on("element.rendered", elementBinding);
          // Initial call
          elementBinding($(".content"));
      });
  </script>

{% endblock %}